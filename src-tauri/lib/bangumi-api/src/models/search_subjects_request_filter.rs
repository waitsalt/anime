/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SearchSubjectsRequestFilter : 不同条件之间是 `且` 的关系
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchSubjectsRequestFilter {
    /// 条目类型，参照 `SubjectType` enum，多值之间为 `或` 的关系。
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Vec<models::SubjectType>>,
    /// 公共标签。多个值之间为 `且` 关系。可以用 `-` 排除标签。比如 `-科幻` 可以排除科幻标签。
    #[serde(rename = "meta_tags", skip_serializing_if = "Option::is_none")]
    pub meta_tags: Option<Vec<String>>,
    /// 标签，可以多次出现。多值之间为 `且` 关系。
    #[serde(rename = "tag", skip_serializing_if = "Option::is_none")]
    pub tag: Option<Vec<String>>,
    /// 播出日期/发售日期，日期必需为 `YYYY-MM-DD` 格式。多值之间为 `且` 关系。
    #[serde(rename = "air_date", skip_serializing_if = "Option::is_none")]
    pub air_date: Option<Vec<String>>,
    /// 用于搜索指定评分的条目，多值之间为 `且` 关系。
    #[serde(rename = "rating", skip_serializing_if = "Option::is_none")]
    pub rating: Option<Vec<String>>,
    /// 用于搜索指定排名的条目，多值之间为 `且` 关系。
    #[serde(rename = "rank", skip_serializing_if = "Option::is_none")]
    pub rank: Option<Vec<String>>,
    /// 无权限的用户会直接忽略此字段，不会返回R18条目。  默认或者 `null` 会返回包含 R18 的所有搜索结果。  `true` 只会返回 R18 条目。  `false` 只会返回非 R18 条目。 
    #[serde(rename = "nsfw", skip_serializing_if = "Option::is_none")]
    pub nsfw: Option<bool>,
}

impl SearchSubjectsRequestFilter {
    /// 不同条件之间是 `且` 的关系
    pub fn new() -> SearchSubjectsRequestFilter {
        SearchSubjectsRequestFilter {
            r#type: None,
            meta_tags: None,
            tag: None,
            air_date: None,
            rating: None,
            rank: None,
            nsfw: None,
        }
    }
}

