/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserSubjectCollection {
    #[serde(rename = "subject_id")]
    pub subject_id: i32,
    #[serde(rename = "subject_type")]
    pub subject_type: models::SubjectType,
    #[serde(rename = "rate")]
    pub rate: i32,
    #[serde(rename = "type")]
    pub r#type: models::SubjectCollectionType,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "ep_status")]
    pub ep_status: i32,
    #[serde(rename = "vol_status")]
    pub vol_status: i32,
    /// 本时间并不代表条目的收藏时间。修改评分，评价，章节观看状态等收藏信息时未更新此时间是一个 bug。请不要依赖此特性
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "private")]
    pub private: bool,
    #[serde(rename = "subject", skip_serializing_if = "Option::is_none")]
    pub subject: Option<Box<models::SlimSubject>>,
}

impl UserSubjectCollection {
    pub fn new(subject_id: i32, subject_type: models::SubjectType, rate: i32, r#type: models::SubjectCollectionType, tags: Vec<String>, ep_status: i32, vol_status: i32, updated_at: String, private: bool) -> UserSubjectCollection {
        UserSubjectCollection {
            subject_id,
            subject_type,
            rate,
            r#type,
            comment: None,
            tags,
            ep_status,
            vol_status,
            updated_at,
            private,
            subject: None,
        }
    }
}

