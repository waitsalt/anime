/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Serialize_repr,Deserialize_repr};
/// SubjectAnimeCategory : 动画类型 - `0` 为 其他 - `1` 为 TV - `2` 为 OVA - `3` 为 Movie - `5` 为 WEB
/// 动画类型 - `0` 为 其他 - `1` 为 TV - `2` 为 OVA - `3` 为 Movie - `5` 为 WEB
#[repr(i64)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr)]
pub enum SubjectAnimeCategory {
    Other = 0,
    TV = 1,
    OVA = 2,
    Movie = 3,
    WEB = 5,

}

impl std::fmt::Display for SubjectAnimeCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", match self {
            Self::Other => "0",
            Self::TV => "1",
            Self::OVA => "2",
            Self::Movie => "3",
            Self::WEB => "5",
        })
    }
}
impl Default for SubjectAnimeCategory {
    fn default() -> SubjectAnimeCategory {
        Self::Other
    }
}

