/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// User : 实际的返回值可能包括文档未声明的 `url` 字段，此字段主要用于开发者从 api 响应直接转跳到网页。 客户端开发者请不用依赖于此特性，此字段的值随时可能会改变。 
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "id")]
    pub id: i32,
    /// 唯一用户名，初始与 UID 相同，可修改一次
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "nickname")]
    pub nickname: String,
    #[serde(rename = "user_group")]
    pub user_group: models::UserGroup,
    #[serde(rename = "avatar")]
    pub avatar: Box<models::Avatar>,
    /// 个人签名
    #[serde(rename = "sign")]
    pub sign: String,
}

impl User {
    /// 实际的返回值可能包括文档未声明的 `url` 字段，此字段主要用于开发者从 api 响应直接转跳到网页。 客户端开发者请不用依赖于此特性，此字段的值随时可能会改变。 
    pub fn new(id: i32, username: String, nickname: String, user_group: models::UserGroup, avatar: models::Avatar, sign: String) -> User {
        User {
            id,
            username,
            nickname,
            user_group,
            avatar: Box::new(avatar),
            sign,
        }
    }
}

