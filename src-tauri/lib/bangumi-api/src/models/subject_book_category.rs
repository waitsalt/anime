/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Serialize_repr,Deserialize_repr};
/// SubjectBookCategory : 书籍类型 - `0` 为 其他 - `1001` 为 漫画 - `1002` 为 小说 - `1003` 为 画集
/// 书籍类型 - `0` 为 其他 - `1001` 为 漫画 - `1002` 为 小说 - `1003` 为 画集
#[repr(i64)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr)]
pub enum SubjectBookCategory {
    Other = 0,
    Comic = 1001,
    Novel = 1002,
    Illustration = 1003,

}

impl std::fmt::Display for SubjectBookCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", match self {
            Self::Other => "0",
            Self::Comic => "1001",
            Self::Novel => "1002",
            Self::Illustration => "1003",
        })
    }
}
impl Default for SubjectBookCategory {
    fn default() -> SubjectBookCategory {
        Self::Other
    }
}

