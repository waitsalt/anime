/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Serialize_repr,Deserialize_repr};
/// SubjectRealCategory : 电影类型 - `0` 为 其他 - `1` 为 日剧 - `2` 为 欧美剧 - `3` 为 华语剧 - `6001` 为 电视剧 - `6002` 为 电影 - `6003` 为 演出 - `6004` 为 综艺
/// 电影类型 - `0` 为 其他 - `1` 为 日剧 - `2` 为 欧美剧 - `3` 为 华语剧 - `6001` 为 电视剧 - `6002` 为 电影 - `6003` 为 演出 - `6004` 为 综艺
#[repr(i64)]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr)]
pub enum SubjectRealCategory {
    Other = 0,
    JP = 1,
    EN = 2,
    CN = 3,
    TV = 6001,
    Movie = 6002,
    Live = 6003,
    Show = 6004,

}

impl std::fmt::Display for SubjectRealCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", match self {
            Self::Other => "0",
            Self::JP => "1",
            Self::EN => "2",
            Self::CN => "3",
            Self::TV => "6001",
            Self::Movie => "6002",
            Self::Live => "6003",
            Self::Show => "6004",
        })
    }
}
impl Default for SubjectRealCategory {
    fn default() -> SubjectRealCategory {
        Self::Other
    }
}

