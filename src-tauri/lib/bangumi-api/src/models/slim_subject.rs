/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SlimSubject {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "type")]
    pub r#type: models::SubjectType,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "name_cn")]
    pub name_cn: String,
    /// 截短后的条目描述。
    #[serde(rename = "short_summary")]
    pub short_summary: String,
    /// air date in `YYYY-MM-DD` format
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    #[serde(rename = "images")]
    pub images: Box<models::Images>,
    /// 书籍条目的册数，由旧服务端从wiki中解析
    #[serde(rename = "volumes")]
    pub volumes: i32,
    /// 由旧服务端从wiki中解析，对于书籍条目为`话数`
    #[serde(rename = "eps")]
    pub eps: i32,
    /// 收藏人数
    #[serde(rename = "collection_total")]
    pub collection_total: i32,
    /// 分数
    #[serde(rename = "score")]
    pub score: f64,
    /// 排名
    #[serde(rename = "rank")]
    pub rank: i32,
    /// 前 10 个 tag
    #[serde(rename = "tags")]
    pub tags: Vec<models::Tag>,
}

impl SlimSubject {
    pub fn new(id: i32, r#type: models::SubjectType, name: String, name_cn: String, short_summary: String, images: models::Images, volumes: i32, eps: i32, collection_total: i32, score: f64, rank: i32, tags: Vec<models::Tag>) -> SlimSubject {
        SlimSubject {
            id,
            r#type,
            name,
            name_cn,
            short_summary,
            date: None,
            images: Box::new(images),
            volumes,
            eps,
            collection_total,
            score,
            rank,
            tags,
        }
    }
}

