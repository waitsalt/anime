/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubjectRevisionData {
    #[serde(rename = "field_eps")]
    pub field_eps: i32,
    #[serde(rename = "field_infobox")]
    pub field_infobox: String,
    #[serde(rename = "field_summary")]
    pub field_summary: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "name_cn")]
    pub name_cn: String,
    #[serde(rename = "platform")]
    pub platform: i32,
    #[serde(rename = "subject_id")]
    pub subject_id: i32,
    #[serde(rename = "type")]
    pub r#type: i32,
    #[serde(rename = "type_id")]
    pub type_id: i32,
    #[serde(rename = "vote_field")]
    pub vote_field: String,
}

impl SubjectRevisionData {
    pub fn new(field_eps: i32, field_infobox: String, field_summary: String, name: String, name_cn: String, platform: i32, subject_id: i32, r#type: i32, type_id: i32, vote_field: String) -> SubjectRevisionData {
        SubjectRevisionData {
            field_eps,
            field_infobox,
            field_summary,
            name,
            name_cn,
            platform,
            subject_id,
            r#type,
            type_id,
            vote_field,
        }
    }
}

