/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LegacyTopic : 讨论版
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LegacyTopic {
    /// ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// 地址
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// 标题
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// 所属对象（条目） ID
    #[serde(rename = "main_id", skip_serializing_if = "Option::is_none")]
    pub main_id: Option<i32>,
    /// 发布时间
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
    /// 最后回复时间
    #[serde(rename = "lastpost", skip_serializing_if = "Option::is_none")]
    pub lastpost: Option<i32>,
    /// 回复数
    #[serde(rename = "replies", skip_serializing_if = "Option::is_none")]
    pub replies: Option<i32>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::LegacyUser>>,
}

impl LegacyTopic {
    /// 讨论版
    pub fn new() -> LegacyTopic {
        LegacyTopic {
            id: None,
            url: None,
            title: None,
            main_id: None,
            timestamp: None,
            lastpost: None,
            replies: None,
            user: None,
        }
    }
}

