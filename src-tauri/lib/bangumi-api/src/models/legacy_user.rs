/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LegacyUser : 用户信息
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LegacyUser {
    /// 用户 id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// 用户主页地址
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// 用户名
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// 昵称
    #[serde(rename = "nickname", skip_serializing_if = "Option::is_none")]
    pub nickname: Option<String>,
    #[serde(rename = "avatar", skip_serializing_if = "Option::is_none")]
    pub avatar: Option<Box<models::LegacyUserAvatar>>,
    /// 签名
    #[serde(rename = "sign", skip_serializing_if = "Option::is_none")]
    pub sign: Option<String>,
    #[serde(rename = "usergroup", skip_serializing_if = "Option::is_none")]
    pub usergroup: Option<models::LegacyUserGroup>,
}

impl LegacyUser {
    /// 用户信息
    pub fn new() -> LegacyUser {
        LegacyUser {
            id: None,
            url: None,
            username: None,
            nickname: None,
            avatar: None,
            sign: None,
            usergroup: None,
        }
    }
}

