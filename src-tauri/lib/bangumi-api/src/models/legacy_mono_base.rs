/*
 * Bangumi API
 *
 * 你可以在 <https://next.bgm.tv/demo/access-token> 生成一个 Access Token  ## [关于 User Agent](https://github.com/bangumi/api/blob/master/docs-raw/user%20agent.md)  如果你在使用中遇到了问题，请优先使用 GitHub issue 提交问题。在 bangumi 小组发帖可能无法得到及时反馈。 
 *
 * The version of the OpenAPI document: 2025-07-1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LegacyMonoBase : 人物（基础模型）
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LegacyMonoBase {
    /// 人物 ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// 人物地址
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// 姓名
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "images", skip_serializing_if = "Option::is_none")]
    pub images: Option<Box<models::LegacyMonoBaseImages>>,
}

impl LegacyMonoBase {
    /// 人物（基础模型）
    pub fn new() -> LegacyMonoBase {
        LegacyMonoBase {
            id: None,
            url: None,
            name: None,
            images: None,
        }
    }
}

